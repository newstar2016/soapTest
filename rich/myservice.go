// Code generated by gowsdl DO NOT EDIT.

package rich

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type CreateCardByAgencies struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CreateCardByAgencies"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type CreateCardByAgenciesResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CreateCardByAgenciesResponse"`

	CreateCardByAgenciesResult *string `xml:"CreateCardByAgenciesResult,omitempty" json:"CreateCardByAgenciesResult,omitempty"`
}

type CreateToken struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CreateToken"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type CreateTokenResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CreateTokenResponse"`

	CreateTokenResult *string `xml:"CreateTokenResult,omitempty" json:"CreateTokenResult,omitempty"`
}

type ChangeMedicalBooking struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ ChangeMedicalBooking"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type ChangeMedicalBookingResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ ChangeMedicalBookingResponse"`

	ChangeMedicalBookingResult *string `xml:"ChangeMedicalBookingResult,omitempty" json:"ChangeMedicalBookingResult,omitempty"`
}

type LoginAndGetVCardInfo struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ LoginAndGetVCardInfo"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type LoginAndGetVCardInfoResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ LoginAndGetVCardInfoResponse"`

	LoginAndGetVCardInfoResult *string `xml:"LoginAndGetVCardInfoResult,omitempty" json:"LoginAndGetVCardInfoResult,omitempty"`
}

type GetReservationInfoByCardNo struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetReservationInfoByCardNo"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type GetReservationInfoByCardNoResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetReservationInfoByCardNoResponse"`

	GetReservationInfoByCardNoResult *string `xml:"GetReservationInfoByCardNoResult,omitempty" json:"GetReservationInfoByCardNoResult,omitempty"`
}

type GetReservationInfoByCardNoRI struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetReservationInfoByCardNoRI"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type GetReservationInfoByCardNoRIResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetReservationInfoByCardNoRIResponse"`

	GetReservationInfoByCardNoRIResult *string `xml:"GetReservationInfoByCardNoRIResult,omitempty" json:"GetReservationInfoByCardNoRIResult,omitempty"`
}

type GetMedicalInstitutionList struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetMedicalInstitutionList"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type GetMedicalInstitutionListResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetMedicalInstitutionListResponse"`

	GetMedicalInstitutionListResult *string `xml:"GetMedicalInstitutionListResult,omitempty" json:"GetMedicalInstitutionListResult,omitempty"`
}

type CheckPackageInInstitution struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CheckPackageInInstitution"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type CheckPackageInInstitutionResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CheckPackageInInstitutionResponse"`

	CheckPackageInInstitutionResult *string `xml:"CheckPackageInInstitutionResult,omitempty" json:"CheckPackageInInstitutionResult,omitempty"`
}

type GetCapacityOfInstitution struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetCapacityOfInstitution"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type GetCapacityOfInstitutionResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetCapacityOfInstitutionResponse"`

	GetCapacityOfInstitutionResult *string `xml:"GetCapacityOfInstitutionResult,omitempty" json:"GetCapacityOfInstitutionResult,omitempty"`
}

type MedicalBooking struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ MedicalBooking"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type MedicalBookingResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ MedicalBookingResponse"`

	MedicalBookingResult *string `xml:"MedicalBookingResult,omitempty" json:"MedicalBookingResult,omitempty"`
}

type CancelMedicalBooking struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CancelMedicalBooking"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type CancelMedicalBookingResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CancelMedicalBookingResponse"`

	CancelMedicalBookingResult *string `xml:"CancelMedicalBookingResult,omitempty" json:"CancelMedicalBookingResult,omitempty"`
}

type CreateCardForThirdParty struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CreateCardForThirdParty"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type CreateCardForThirdPartyResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ CreateCardForThirdPartyResponse"`

	CreateCardForThirdPartyResult *string `xml:"CreateCardForThirdPartyResult,omitempty" json:"CreateCardForThirdPartyResult,omitempty"`
}

type GetReportInfo struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetReportInfo"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type GetReportInfoResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetReportInfoResponse"`

	GetReportInfoResult *string `xml:"GetReportInfoResult,omitempty" json:"GetReportInfoResult,omitempty"`
}

type DownloadReport struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ DownloadReport"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type DownloadReportResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ DownloadReportResponse"`

	DownloadReportResult *string `xml:"DownloadReportResult,omitempty" json:"DownloadReportResult,omitempty"`
}

type GetCityList struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetCityList"`

	RequestJson *string `xml:"requestJson,omitempty" json:"requestJson,omitempty"`
}

type GetCityListResponse struct {
	XMLName xml.Name `xml:"http://RichHealth.RichHealthThridInterfaceForCard/ GetCityListResponse"`

	GetCityListResult *string `xml:"GetCityListResult,omitempty" json:"GetCityListResult,omitempty"`
}

type Char int32

type Duration *Duration

type Guid string

type Base64Binary []byte

type Boolean bool

type byte int8

type DateTime soap.XSDDateTime

type Decimal float64

type Double float64

type Float float32

type int int32

type Long int64

type Short int16

type UnsignedByte byte

type UnsignedInt uint32

type UnsignedLong uint64

type UnsignedShort uint16

type RichHealthThridInterfaceForCard interface {
	CreateCardByAgencies(request *CreateCardByAgencies) (*CreateCardByAgenciesResponse, error)

	CreateCardByAgenciesContext(ctx context.Context, request *CreateCardByAgencies) (*CreateCardByAgenciesResponse, error)

	CreateToken(request *CreateToken) (*CreateTokenResponse, error)

	CreateTokenContext(ctx context.Context, request *CreateToken) (*CreateTokenResponse, error)

	ChangeMedicalBooking(request *ChangeMedicalBooking) (*ChangeMedicalBookingResponse, error)

	ChangeMedicalBookingContext(ctx context.Context, request *ChangeMedicalBooking) (*ChangeMedicalBookingResponse, error)

	LoginAndGetVCardInfo(request *LoginAndGetVCardInfo) (*LoginAndGetVCardInfoResponse, error)

	LoginAndGetVCardInfoContext(ctx context.Context, request *LoginAndGetVCardInfo) (*LoginAndGetVCardInfoResponse, error)

	GetReservationInfoByCardNo(request *GetReservationInfoByCardNo) (*GetReservationInfoByCardNoResponse, error)

	GetReservationInfoByCardNoContext(ctx context.Context, request *GetReservationInfoByCardNo) (*GetReservationInfoByCardNoResponse, error)

	GetReservationInfoByCardNoRI(request *GetReservationInfoByCardNoRI) (*GetReservationInfoByCardNoRIResponse, error)

	GetReservationInfoByCardNoRIContext(ctx context.Context, request *GetReservationInfoByCardNoRI) (*GetReservationInfoByCardNoRIResponse, error)

	GetMedicalInstitutionList(request *GetMedicalInstitutionList) (*GetMedicalInstitutionListResponse, error)

	GetMedicalInstitutionListContext(ctx context.Context, request *GetMedicalInstitutionList) (*GetMedicalInstitutionListResponse, error)

	CheckPackageInInstitution(request *CheckPackageInInstitution) (*CheckPackageInInstitutionResponse, error)

	CheckPackageInInstitutionContext(ctx context.Context, request *CheckPackageInInstitution) (*CheckPackageInInstitutionResponse, error)

	GetCapacityOfInstitution(request *GetCapacityOfInstitution) (*GetCapacityOfInstitutionResponse, error)

	GetCapacityOfInstitutionContext(ctx context.Context, request *GetCapacityOfInstitution) (*GetCapacityOfInstitutionResponse, error)

	MedicalBooking(request *MedicalBooking) (*MedicalBookingResponse, error)

	MedicalBookingContext(ctx context.Context, request *MedicalBooking) (*MedicalBookingResponse, error)

	CancelMedicalBooking(request *CancelMedicalBooking) (*CancelMedicalBookingResponse, error)

	CancelMedicalBookingContext(ctx context.Context, request *CancelMedicalBooking) (*CancelMedicalBookingResponse, error)

	CreateCardForThirdParty(request *CreateCardForThirdParty) (*CreateCardForThirdPartyResponse, error)

	CreateCardForThirdPartyContext(ctx context.Context, request *CreateCardForThirdParty) (*CreateCardForThirdPartyResponse, error)

	GetReportInfo(request *GetReportInfo) (*GetReportInfoResponse, error)

	GetReportInfoContext(ctx context.Context, request *GetReportInfo) (*GetReportInfoResponse, error)

	DownloadReport(request *DownloadReport) (*DownloadReportResponse, error)

	DownloadReportContext(ctx context.Context, request *DownloadReport) (*DownloadReportResponse, error)

	GetCityList(request *GetCityList) (*GetCityListResponse, error)

	GetCityListContext(ctx context.Context, request *GetCityList) (*GetCityListResponse, error)
}

type richHealthThridInterfaceForCard struct {
	client *soap.Client
}

func NewRichHealthThridInterfaceForCard(client *soap.Client) RichHealthThridInterfaceForCard {
	return &richHealthThridInterfaceForCard{
		client: client,
	}
}

func (service *richHealthThridInterfaceForCard) CreateCardByAgenciesContext(ctx context.Context, request *CreateCardByAgencies) (*CreateCardByAgenciesResponse, error) {
	response := new(CreateCardByAgenciesResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/CreateCardByAgencies", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) CreateCardByAgencies(request *CreateCardByAgencies) (*CreateCardByAgenciesResponse, error) {
	return service.CreateCardByAgenciesContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) CreateTokenContext(ctx context.Context, request *CreateToken) (*CreateTokenResponse, error) {
	response := new(CreateTokenResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/CreateToken", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) CreateToken(request *CreateToken) (*CreateTokenResponse, error) {
	return service.CreateTokenContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) ChangeMedicalBookingContext(ctx context.Context, request *ChangeMedicalBooking) (*ChangeMedicalBookingResponse, error) {
	response := new(ChangeMedicalBookingResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/ChangeMedicalBooking", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) ChangeMedicalBooking(request *ChangeMedicalBooking) (*ChangeMedicalBookingResponse, error) {
	return service.ChangeMedicalBookingContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) LoginAndGetVCardInfoContext(ctx context.Context, request *LoginAndGetVCardInfo) (*LoginAndGetVCardInfoResponse, error) {
	response := new(LoginAndGetVCardInfoResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/LoginAndGetVCardInfo", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) LoginAndGetVCardInfo(request *LoginAndGetVCardInfo) (*LoginAndGetVCardInfoResponse, error) {
	return service.LoginAndGetVCardInfoContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) GetReservationInfoByCardNoContext(ctx context.Context, request *GetReservationInfoByCardNo) (*GetReservationInfoByCardNoResponse, error) {
	response := new(GetReservationInfoByCardNoResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/GetReservationInfoByCardNo", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) GetReservationInfoByCardNo(request *GetReservationInfoByCardNo) (*GetReservationInfoByCardNoResponse, error) {
	return service.GetReservationInfoByCardNoContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) GetReservationInfoByCardNoRIContext(ctx context.Context, request *GetReservationInfoByCardNoRI) (*GetReservationInfoByCardNoRIResponse, error) {
	response := new(GetReservationInfoByCardNoRIResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/GetReservationInfoByCardNoRI", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) GetReservationInfoByCardNoRI(request *GetReservationInfoByCardNoRI) (*GetReservationInfoByCardNoRIResponse, error) {
	return service.GetReservationInfoByCardNoRIContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) GetMedicalInstitutionListContext(ctx context.Context, request *GetMedicalInstitutionList) (*GetMedicalInstitutionListResponse, error) {
	response := new(GetMedicalInstitutionListResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/GetMedicalInstitutionList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) GetMedicalInstitutionList(request *GetMedicalInstitutionList) (*GetMedicalInstitutionListResponse, error) {
	return service.GetMedicalInstitutionListContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) CheckPackageInInstitutionContext(ctx context.Context, request *CheckPackageInInstitution) (*CheckPackageInInstitutionResponse, error) {
	response := new(CheckPackageInInstitutionResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/CheckPackageInInstitution", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) CheckPackageInInstitution(request *CheckPackageInInstitution) (*CheckPackageInInstitutionResponse, error) {
	return service.CheckPackageInInstitutionContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) GetCapacityOfInstitutionContext(ctx context.Context, request *GetCapacityOfInstitution) (*GetCapacityOfInstitutionResponse, error) {
	response := new(GetCapacityOfInstitutionResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/GetCapacityOfInstitution", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) GetCapacityOfInstitution(request *GetCapacityOfInstitution) (*GetCapacityOfInstitutionResponse, error) {
	return service.GetCapacityOfInstitutionContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) MedicalBookingContext(ctx context.Context, request *MedicalBooking) (*MedicalBookingResponse, error) {
	response := new(MedicalBookingResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/MedicalBooking", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) MedicalBooking(request *MedicalBooking) (*MedicalBookingResponse, error) {
	return service.MedicalBookingContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) CancelMedicalBookingContext(ctx context.Context, request *CancelMedicalBooking) (*CancelMedicalBookingResponse, error) {
	response := new(CancelMedicalBookingResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/CancelMedicalBooking", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) CancelMedicalBooking(request *CancelMedicalBooking) (*CancelMedicalBookingResponse, error) {
	return service.CancelMedicalBookingContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) CreateCardForThirdPartyContext(ctx context.Context, request *CreateCardForThirdParty) (*CreateCardForThirdPartyResponse, error) {
	response := new(CreateCardForThirdPartyResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/CreateCardForThirdParty", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) CreateCardForThirdParty(request *CreateCardForThirdParty) (*CreateCardForThirdPartyResponse, error) {
	return service.CreateCardForThirdPartyContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) GetReportInfoContext(ctx context.Context, request *GetReportInfo) (*GetReportInfoResponse, error) {
	response := new(GetReportInfoResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/GetReportInfo", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) GetReportInfo(request *GetReportInfo) (*GetReportInfoResponse, error) {
	return service.GetReportInfoContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) DownloadReportContext(ctx context.Context, request *DownloadReport) (*DownloadReportResponse, error) {
	response := new(DownloadReportResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/DownloadReport", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) DownloadReport(request *DownloadReport) (*DownloadReportResponse, error) {
	return service.DownloadReportContext(
		context.Background(),
		request,
	)
}

func (service *richHealthThridInterfaceForCard) GetCityListContext(ctx context.Context, request *GetCityList) (*GetCityListResponse, error) {
	response := new(GetCityListResponse)
	err := service.client.CallContext(ctx, "http://RichHealth.RichHealthThridInterfaceForCard/RichHealthThridInterfaceForCard/GetCityList", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *richHealthThridInterfaceForCard) GetCityList(request *GetCityList) (*GetCityListResponse, error) {
	return service.GetCityListContext(
		context.Background(),
		request,
	)
}
